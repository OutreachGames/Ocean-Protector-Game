local MY_GUI = require "gui.gooey_theme_md"

function init(self)
	MY_GUI.acquire_input()

	--MY_GUI.checkbox("checkbox").set_checked(true)
	--MY_GUI.radio("radio2").set_selected(true)
	--MY_GUI.scrollbar("scrollbar").scroll_to(0, 0.75) --also can set the scroll

end

function on_input(self, action_id, action)
	local group = MY_GUI.group("group1", function()
		MY_GUI.button("button", action_id,action, function(button)
			if button.long_pressed then
				print("Button was long pressed")
			else
				print("Button was pressed")
			end
		end)

		MY_GUI.checkbox("checkbox", action_id, action, function(checkbox)
			print("checkbox", checkbox.checked)
		end)

		MY_GUI.radiogroup("MYGROUP", action_id, action, function(group_id, action_id, action)
			MY_GUI.radio("radio1", group_id, action_id, action, function(radio)
				print("radio 1", radio.selected)
			end)
			MY_GUI.radio("radio2", group_id, action_id, action, function(radio)
				print("radio 2", radio.selected)
			end)
			MY_GUI.radio("radio3", group_id, action_id, action, function(radio)
				print("radio 3", radio.selected)
			end)
		end)

		MY_GUI.scrollbar("scrollbar", action_id, action, function(scrollbar)
			if scrollbar.pressed then
				-- also set fill of line
				local progress_bar_node = gui.get_node("scrollbar".."/gui_scrollbar_progress")
				local core_bar_node = gui.get_node("scrollbar".."/gui_scrollbar_core")
				local size_base = gui.get_scale(progress_bar_node).y * gui.get_size(core_bar_node).y -- <-- y value at scale 1 from MY_GUI file
				local size_to_update = gui.get_size(progress_bar_node)
				size_to_update.y = (1 - scrollbar.scroll.y) * size_base
				gui.set_size(progress_bar_node, size_to_update)
			end
			print("scrolled", scrollbar.scroll.y)
		end)
		
	end)
	return group.consumed
end
